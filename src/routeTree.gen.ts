/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as CasesRouteRouteImport } from './routes/cases/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CasesIndexRouteImport } from './routes/cases/index'
import { Route as CasesProductExample3RouteImport } from './routes/cases/product/example3'
import { Route as CasesProductExample2RouteImport } from './routes/cases/product/example2'
import { Route as CasesProductExampleRouteImport } from './routes/cases/product/example'
import { Route as CasesGameExample2RouteImport } from './routes/cases/game/example2'
import { Route as CasesGameExampleRouteImport } from './routes/cases/game/example'

const CasesRouteRoute = CasesRouteRouteImport.update({
  id: '/cases',
  path: '/cases',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CasesIndexRoute = CasesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CasesRouteRoute,
} as any)
const CasesProductExample3Route = CasesProductExample3RouteImport.update({
  id: '/product/example3',
  path: '/product/example3',
  getParentRoute: () => CasesRouteRoute,
} as any)
const CasesProductExample2Route = CasesProductExample2RouteImport.update({
  id: '/product/example2',
  path: '/product/example2',
  getParentRoute: () => CasesRouteRoute,
} as any)
const CasesProductExampleRoute = CasesProductExampleRouteImport.update({
  id: '/product/example',
  path: '/product/example',
  getParentRoute: () => CasesRouteRoute,
} as any)
const CasesGameExample2Route = CasesGameExample2RouteImport.update({
  id: '/game/example2',
  path: '/game/example2',
  getParentRoute: () => CasesRouteRoute,
} as any)
const CasesGameExampleRoute = CasesGameExampleRouteImport.update({
  id: '/game/example',
  path: '/game/example',
  getParentRoute: () => CasesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cases': typeof CasesRouteRouteWithChildren
  '/cases/': typeof CasesIndexRoute
  '/cases/game/example': typeof CasesGameExampleRoute
  '/cases/game/example2': typeof CasesGameExample2Route
  '/cases/product/example': typeof CasesProductExampleRoute
  '/cases/product/example2': typeof CasesProductExample2Route
  '/cases/product/example3': typeof CasesProductExample3Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cases': typeof CasesIndexRoute
  '/cases/game/example': typeof CasesGameExampleRoute
  '/cases/game/example2': typeof CasesGameExample2Route
  '/cases/product/example': typeof CasesProductExampleRoute
  '/cases/product/example2': typeof CasesProductExample2Route
  '/cases/product/example3': typeof CasesProductExample3Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cases': typeof CasesRouteRouteWithChildren
  '/cases/': typeof CasesIndexRoute
  '/cases/game/example': typeof CasesGameExampleRoute
  '/cases/game/example2': typeof CasesGameExample2Route
  '/cases/product/example': typeof CasesProductExampleRoute
  '/cases/product/example2': typeof CasesProductExample2Route
  '/cases/product/example3': typeof CasesProductExample3Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cases'
    | '/cases/'
    | '/cases/game/example'
    | '/cases/game/example2'
    | '/cases/product/example'
    | '/cases/product/example2'
    | '/cases/product/example3'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cases'
    | '/cases/game/example'
    | '/cases/game/example2'
    | '/cases/product/example'
    | '/cases/product/example2'
    | '/cases/product/example3'
  id:
    | '__root__'
    | '/'
    | '/cases'
    | '/cases/'
    | '/cases/game/example'
    | '/cases/game/example2'
    | '/cases/product/example'
    | '/cases/product/example2'
    | '/cases/product/example3'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CasesRouteRoute: typeof CasesRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cases': {
      id: '/cases'
      path: '/cases'
      fullPath: '/cases'
      preLoaderRoute: typeof CasesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cases/': {
      id: '/cases/'
      path: '/'
      fullPath: '/cases/'
      preLoaderRoute: typeof CasesIndexRouteImport
      parentRoute: typeof CasesRouteRoute
    }
    '/cases/game/example': {
      id: '/cases/game/example'
      path: '/game/example'
      fullPath: '/cases/game/example'
      preLoaderRoute: typeof CasesGameExampleRouteImport
      parentRoute: typeof CasesRouteRoute
    }
    '/cases/game/example2': {
      id: '/cases/game/example2'
      path: '/game/example2'
      fullPath: '/cases/game/example2'
      preLoaderRoute: typeof CasesGameExample2RouteImport
      parentRoute: typeof CasesRouteRoute
    }
    '/cases/product/example': {
      id: '/cases/product/example'
      path: '/product/example'
      fullPath: '/cases/product/example'
      preLoaderRoute: typeof CasesProductExampleRouteImport
      parentRoute: typeof CasesRouteRoute
    }
    '/cases/product/example2': {
      id: '/cases/product/example2'
      path: '/product/example2'
      fullPath: '/cases/product/example2'
      preLoaderRoute: typeof CasesProductExample2RouteImport
      parentRoute: typeof CasesRouteRoute
    }
    '/cases/product/example3': {
      id: '/cases/product/example3'
      path: '/product/example3'
      fullPath: '/cases/product/example3'
      preLoaderRoute: typeof CasesProductExample3RouteImport
      parentRoute: typeof CasesRouteRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/cases/route' {
  const createFileRoute: CreateFileRoute<
    '/cases',
    FileRoutesByPath['/cases']['parentRoute'],
    FileRoutesByPath['/cases']['id'],
    FileRoutesByPath['/cases']['path'],
    FileRoutesByPath['/cases']['fullPath']
  >
}
declare module './routes/cases/index' {
  const createFileRoute: CreateFileRoute<
    '/cases/',
    FileRoutesByPath['/cases/']['parentRoute'],
    FileRoutesByPath['/cases/']['id'],
    FileRoutesByPath['/cases/']['path'],
    FileRoutesByPath['/cases/']['fullPath']
  >
}
declare module './routes/cases/game/example' {
  const createFileRoute: CreateFileRoute<
    '/cases/game/example',
    FileRoutesByPath['/cases/game/example']['parentRoute'],
    FileRoutesByPath['/cases/game/example']['id'],
    FileRoutesByPath['/cases/game/example']['path'],
    FileRoutesByPath['/cases/game/example']['fullPath']
  >
}
declare module './routes/cases/game/example2' {
  const createFileRoute: CreateFileRoute<
    '/cases/game/example2',
    FileRoutesByPath['/cases/game/example2']['parentRoute'],
    FileRoutesByPath['/cases/game/example2']['id'],
    FileRoutesByPath['/cases/game/example2']['path'],
    FileRoutesByPath['/cases/game/example2']['fullPath']
  >
}
declare module './routes/cases/product/example' {
  const createFileRoute: CreateFileRoute<
    '/cases/product/example',
    FileRoutesByPath['/cases/product/example']['parentRoute'],
    FileRoutesByPath['/cases/product/example']['id'],
    FileRoutesByPath['/cases/product/example']['path'],
    FileRoutesByPath['/cases/product/example']['fullPath']
  >
}
declare module './routes/cases/product/example2' {
  const createFileRoute: CreateFileRoute<
    '/cases/product/example2',
    FileRoutesByPath['/cases/product/example2']['parentRoute'],
    FileRoutesByPath['/cases/product/example2']['id'],
    FileRoutesByPath['/cases/product/example2']['path'],
    FileRoutesByPath['/cases/product/example2']['fullPath']
  >
}
declare module './routes/cases/product/example3' {
  const createFileRoute: CreateFileRoute<
    '/cases/product/example3',
    FileRoutesByPath['/cases/product/example3']['parentRoute'],
    FileRoutesByPath['/cases/product/example3']['id'],
    FileRoutesByPath['/cases/product/example3']['path'],
    FileRoutesByPath['/cases/product/example3']['fullPath']
  >
}

interface CasesRouteRouteChildren {
  CasesIndexRoute: typeof CasesIndexRoute
  CasesGameExampleRoute: typeof CasesGameExampleRoute
  CasesGameExample2Route: typeof CasesGameExample2Route
  CasesProductExampleRoute: typeof CasesProductExampleRoute
  CasesProductExample2Route: typeof CasesProductExample2Route
  CasesProductExample3Route: typeof CasesProductExample3Route
}

const CasesRouteRouteChildren: CasesRouteRouteChildren = {
  CasesIndexRoute: CasesIndexRoute,
  CasesGameExampleRoute: CasesGameExampleRoute,
  CasesGameExample2Route: CasesGameExample2Route,
  CasesProductExampleRoute: CasesProductExampleRoute,
  CasesProductExample2Route: CasesProductExample2Route,
  CasesProductExample3Route: CasesProductExample3Route,
}

const CasesRouteRouteWithChildren = CasesRouteRoute._addFileChildren(
  CasesRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CasesRouteRoute: CasesRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
